#!/bin/bash

bold="\[\033[01m\]"
normal="\[\033[0m\]"

red="\[\033[31m\]"
green="\[\033[32m\]"
purple="\[\033[35m\]"
blue="\[\033[34m\]"
cyan="\[\033[36m\]"
n="\[\033[37m\]"

prompt="$n\u"

prompt+="$bold$cyan \w $normal"

function docker_containers() {
	if ! command -v docker &>/dev/null
	then
		return 0
	fi
	containers="$(expr $(docker ps | wc -l &) - 1)"

	if [ $(($containers)) -ge 1 ]; then
		echo -ne " $containers \U1F40B"
	fi
	unset containers
}

function get_rpi_tmep() {
	if ! command -v vcgencmd &>/dev/null
	then
		return 0
	fi
	# temperature_str="$()"
	# temperature="$(echo "$temperature_str" | cut -d'=' -f 2)"
	temperature="$(vcgencmd measure_temp | cut -d'=' -f 2 | sed "s/'C//" )"
	if [ 1 -eq $(echo "$temperature < 45" | bc -l)   ]; then
			echo -ne "\033[31m"
	else
			echo -ne "\033[32m"
	fi
	echo -ne " \U1f321 $temperature "
}

function dockinit() {
	export dockered=1
	return 0
}

function git_repos() {
	# is a repo?
	if [ $(git status 2>&1 | wc -l) -ne 1 ]; then
		# is repo clean?
		if [ $(git status 2>/dev/null | wc -l ) -gt 5 ]; then
			echo -ne "\033[31m"
		else
			echo -ne "\033[32m"
		fi
		# fork symbol
		echo -ne '\uE0A0 '
		repo="$(git status 2>/dev/null | head -n 1 | sed 's/detached //' | cut -d' ' -f 3 )"
		echo -n $repo
	fi
}

# git info
prompt+="$bold\$(git_repos)"

# docker info
# prompt+="$blue$bold\$(docker_containers)$normal"

# rpi temperature
prompt+="$normal$(get_rpi_tmep)$normal"

prompt+="$normal\n$unknown $ $normal"

export PS1="$prompt"

